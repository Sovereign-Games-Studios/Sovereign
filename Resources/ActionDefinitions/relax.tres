[gd_resource type="Resource" load_steps=2 format=3 uid="uid://cf7cdn8an2cyv"]

[sub_resource type="GDScript" id="GDScript_2swqp"]
script/source = "extends Action
'''
Actions directly modify the npc to set in motion events based on a series of considerations. 
These are the \"leaf nodes\" of the behaviour tree. 

find_target:
	Selects the best target from the list of npc's currently colliding with the NPC's vision radius. 
	Once best target is found, sets the target and initiates combat. 
'''

# List of considerations for choosing this specific reasoner
var considerations = [\"random_chance\"]
var child_nodes = []
var type = \"ActionQueue\"

func consider(npc: NPC, kingdom_state):
	# Unique Consideration for relaxation.
	if kingdom_state.relaxation_buildings.size() < 0:
		return 0
	var consideration_value = 0
	for consideration in considerations:
		var consider_node = kingdom_state.consider_list[consideration] 
		consideration_value += consider_node.calculate_consideration_value(npc, kingdom_state)
	consideration_value/considerations.size()
	return consideration_value
	
func queue_actions(npc: NPC, kingdom_state: TeamState, mutex: Mutex):
	mutex.lock()
	npc.action_queue.push_back(set_relax_destination)
	npc.action_queue.push_back(move_to_destination)
	npc.action_queue.push_back(enter_building_to_relax)
	npc.action_queue.push_back(relax_in_building)	
	mutex.unlock()
	return \"SUCCESS\"

func is_possible(npc: NPC, kingdom_state: TeamState):
	if len(kingdom_state.relaxation_buildings) > 0:
		return true
	else:
		return false
		
func weigh_option(npc: NPC, kingdom_state: TeamState):
	# Heroes are lazy creatures, prone to relaxation but some have the spark of valor.
	if is_possible(npc, kingdom_state):
		return 100 / npc.personality.valor
	else:
		return -100
"

[resource]
script = SubResource("GDScript_2swqp")
