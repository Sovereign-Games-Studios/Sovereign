[gd_resource type="Resource" load_steps=2 format=3 uid="uid://brj2odoha1xmk"]

[sub_resource type="GDScript" id="GDScript_jfxgr"]
script/source = "extends Resource
'''
Behaviour Nodes take into account the current state of the NPC and it's environment to determine what
action if any should be taken at the present moment. These are the \"branch nodes\" of the behaviour tree.

engage_enemies:
	This node determines if enemies in the NPC's vision range should be engaged or not. If they should, 
	this will progress to the leaf node of find_target. 
'''

# List of considerations for choosing this specific option
var considerations = [\"available_equipment\"]

# Child node, can either be an action or another behaviour node. 
var child_nodes = [\"purchase_items\"]

var type = \"OptionNode\"

'''
TODO 
- Add a variable to store the item for calculation so we don't repeat it later
- Add in a time function for how long it takes the NPC to accumulate required gold, adjust choice
'''
func weigh_option(npc: NPC, kingdom_state: TeamState):
	var option_value = 0
	var best_gs_change = 0
	var gold_cost
	for equipment in npc.desired_equipment:
		if npc.desired_equipment[equipment] != null:
			var gs_change = npc.desired_equipment[equipment].gear_score - npc.current_equipment[equipment].gear_score
			if gs_change > best_gs_change:
				best_gs_change = gs_change
				gold_cost = npc.desired_equipment[equipment].cost
	
	gold_cost = gold_cost - npc.gold
	
	if npc.long_term_goal != null:
		if gold_cost > 0:
			# If we cannot afford the item, this option should not be considered as a short term action. 
			option_value = -100
			return option_value
		else:
			# Return the power level change for the action, which for gear score is a flat number.
			option_value = best_gs_change
	return option_value
"

[resource]
script = SubResource("GDScript_jfxgr")
